// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/@prisma/users"
  
}

datasource banquestprobookingdb {
  provider = "postgresql"
  url  = "postgresql://booking_admin:usersPassword@2025@localhost:5432/banquestprobookingdb?schema=public"
}

model Booking {
  id                    String    @id @default(uuid())
  customer_id           String? // customer booking the venue, points to an ID on users table
  confirmed_by          String?  // staff who confirmed the book, points to an ID on users table
  confirmedAt           DateTime?
  servicebooking_id     String? // eventcenterbooking, catering booking , etc
  serviceType           ServiceType 
  balanceDue            Int
  paymentStatus         PaymentStatus
  status                BookingStatus
  isTermsAccepted               Boolean
  iscancellationPolicyAccepted  Boolean
  isLiabilityWaiverSigned       Boolean
  canceled_by                   String?  //  whoever cancelled the book, points to an ID on users table
  canceledAt                    DateTime?
  cancelationReason             String?
  createdAt                     DateTime  @default(now())
  updatedAt                     DateTime  @updatedAt
  deletedAt                     DateTime?
  deletedBy                     String?  

  @@index([customer_id, status, paymentStatus, serviceType])
} // a review must have a booking, booking can have many payments at most 2


enum ServiceType {
  CATERING
  EVENTCENTER
  
}

enum BookingStatus {
  SCHEDULED
  POSTPONED
  CANCELED
}

enum PaymentStatus {
  SCHEDULED
  POSTPONED
  CANCELED
}

